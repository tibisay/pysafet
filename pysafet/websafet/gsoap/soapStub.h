/* soapStub.h
   Generated by gSOAP 2.7.9l from safet.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns__guardarXmlResponse
#define SOAP_TYPE_ns__guardarXmlResponse (12)
/* ns:guardarXmlResponse */
struct ns__guardarXmlResponse
{
public:
	bool result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns__guardarXml
#define SOAP_TYPE_ns__guardarXml (13)
/* ns:guardarXml */
struct ns__guardarXml
{
public:
	char *in;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__verifyDocumentSignaturesResponse
#define SOAP_TYPE_ns__verifyDocumentSignaturesResponse (15)
/* ns:verifyDocumentSignaturesResponse */
struct ns__verifyDocumentSignaturesResponse
{
public:
	bool result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns__verifyDocumentSignatures
#define SOAP_TYPE_ns__verifyDocumentSignatures (16)
/* ns:verifyDocumentSignatures */
struct ns__verifyDocumentSignatures
{
public:
	char *in;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__verifyDocumentSignatureWithIdResponse
#define SOAP_TYPE_ns__verifyDocumentSignatureWithIdResponse (18)
/* ns:verifyDocumentSignatureWithIdResponse */
struct ns__verifyDocumentSignatureWithIdResponse
{
public:
	bool result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns__verifyDocumentSignatureWithId
#define SOAP_TYPE_ns__verifyDocumentSignatureWithId (19)
/* ns:verifyDocumentSignatureWithId */
struct ns__verifyDocumentSignatureWithId
{
public:
	char *in;	/* optional element of type xsd:string */
	int indexOfSignature;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns__verifyDocumentSignatureWithNamesResponse
#define SOAP_TYPE_ns__verifyDocumentSignatureWithNamesResponse (21)
/* ns:verifyDocumentSignatureWithNamesResponse */
struct ns__verifyDocumentSignatureWithNamesResponse
{
public:
	bool result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns__verifyDocumentSignatureWithNames
#define SOAP_TYPE_ns__verifyDocumentSignatureWithNames (22)
/* ns:verifyDocumentSignatureWithNames */
struct ns__verifyDocumentSignatureWithNames
{
public:
	char *in;	/* optional element of type xsd:string */
	char *signerNames;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (23)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (24)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (26)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (29)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (30)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (6)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (8)
typedef bool xsd__boolean;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (9)
typedef int xsd__int;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__guardarXml(struct soap*, char *in, char *name, bool &result);

SOAP_FMAC5 int SOAP_FMAC6 ns__verifyDocumentSignatures(struct soap*, char *in, bool &result);

SOAP_FMAC5 int SOAP_FMAC6 ns__verifyDocumentSignatureWithId(struct soap*, char *in, int indexOfSignature, bool &result);

SOAP_FMAC5 int SOAP_FMAC6 ns__verifyDocumentSignatureWithNames(struct soap*, char *in, char *signerNames, bool &result);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__guardarXml(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in, char *name, bool &result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__verifyDocumentSignatures(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in, bool &result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__verifyDocumentSignatureWithId(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in, int indexOfSignature, bool &result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__verifyDocumentSignatureWithNames(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in, char *signerNames, bool &result);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__guardarXml(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__verifyDocumentSignatures(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__verifyDocumentSignatureWithId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__verifyDocumentSignatureWithNames(struct soap*);

#endif

/* End of soapStub.h */
